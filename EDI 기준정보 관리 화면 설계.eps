%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (EDI \341\204\200\341\205\265\341\204\214\341\205\256\341\206\253\341\204\214\341\205\245\341\206\274\341\204\207\341\205\251 \341\204\200\341\205\252\341\206\253\341\204\205\341\205\265 \341\204\222\341\205\252\341\204\206\341\205\247\341\206\253 \341\204\211\341\205\245\341\206\257\341\204\200\341\205\250.pdf)
%%Creator: (Adobe Acrobat 22.3.0)
%%For: ycc
%%CreationDate: 2023. 3. 7., 오전 12:54
%%BoundingBox: 0 0 1648 596
%%HiResBoundingBox: 0 0 1647.7200 595.2001
%%CropBox: 0 0 1647.7200 595.2001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1135 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.0-c000 79.cca54b0, 2022/11/26-09:29:55        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® LTSC"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® LTSC"
   xmp:CreateDate="2023-03-06T15:20:30+09:00"
   xmp:ModifyDate="2023-03-06T15:20:30+09:00"
   xmpMM:DocumentID="uuid:94A05511-10F0-4EF3-8120-A1C53231EE1C"
   xmpMM:InstanceID="uuid:94A05511-10F0-4EF3-8120-A1C53231EE1C">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>YoungChul Cho</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -595.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 595.2 li
1647.72 595.2 li
1647.72 0 li
cp
clp
gsave
0 595.2 mo
1648 595.2 li
1648 -.799988 li
0 -.799988 li
cp
clp
27.496 141.73 mo
812.906 141.73 li
812.906 101.547 li
27.496 101.547 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.027 sep
ef
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
27.496 141.73 mo
812.906 141.73 li
812.906 101.547 li
27.496 101.547 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (YVBAKR+MalgunGothic-KSCpc-EUC-H)%%Title: (YVBAKR+MalgunGothic-KSCpc-EUC-H Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /YVBAKR+MalgunGothic-KSCpc-EUC-H def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-977 -248 1199 931} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 28215 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 11 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B64A9516EA237B20D5B2D84CDD00D591E734F491A9FC18DD814B78ACD8EE15> |38 <001C60D8A8C9B66EAD07F2DA7C6FC2B43634C533DB0EB6F37091C741320A4622A812BCF0FA45D459B36A7EF3B31860DF91D0F1DEEBC592D7B3A3FC122C17CAB6933C5503D125F28B4F02250F6F331908BC4FA717EB056332D7DE6541AFF9B4C85A57DF421F73> |88 <001C60D8A8C9B7F942330D8D03B075A983CBBC3F10FCE517C957810C1F61E321B6B4E994E14BF60F4486C87589A8EB4F64F15FD024B6574649132291FCEE4CF4604066F1BA> |86 <001C60D8A8C9B76A0D713231F2A400881518D841D781BAE7947BB4141CAFBEA90ACC049EF0BA67D49B0FF36C96B3E67CDC41DDB9A0B595B3001FD36D3D2643328E6DB0EDE32F34B9FA9EF155D69F1CD8040D65D0156AB976A0E17E30B1D9A9A267BDC3213DEA0C6B55B03E98A0143CBAFDDF5E2F6CCEFC3E16737D3C08687A33C3AFA2E1A0CD834407E563746776B8FF0940BD> |87 <001C60D8A8C9B8137950C38DEE03C4FE0516E7CD7A095AC4D3E73A39737699CCC36032E5205BBC8783131C92B0B5104D04C297CC3530BC6604AD770E8FD9B8ABFDB1D8063ADCBA4AE9EEA444A4> |82 <001C60D8A8C9B7C49EF412AE250A7A2FA35931012F08807AFBA927860D48D93080674E7EF2CF87C9DA35406777EC456499F99BD3E03D0E24C04D6C817D22AEB90C04104A7795ED423D9847CAB2C163522E1646E6AAAA4C3E93E9C3CA6A637AB69B9CB0D8CC4D54EBDF5420C9F8C9A6F0A638473298C017D4C5180E79D89BF68D297F8F71> |80 <001C60D8A8C9B5964B24D74EBA1C5FB6A976C541705BB165C34C6EB03693917ED5A47D9AE6D8195AA87C8064D5591EA08AE694835919D44A8FD754111CBE80BDAAAD8779CD216109B05C6E3B36787116126A13C4964DBAEFF4657220E0D78B0AE1D8413D78A29ED5A046177DA6A3AA670173B02DFECA2F981CE8DF5523> |72 <001C60D8A8C9B784FA609524C428144757EE376EFC5BFE5D56EEDBF95DE7F8DB44A0F33630D9022ACD1D59E76802249EF92126F9F7BA26FA77A1C58498471A5633DF2C3E84FE7BA820058C23252C910A2B6316CD16589E23455D9767E570257C4E35B4793C4A18789BC4330B59F20602861D7B6178DAA5F2119B9638> |85 <001C60D8A8C9B80898F368CA2F075EE7399365AFF672E454414DFF4DF3DF72CC3CBD18792345BB9D8A0B90867D856CE04D783F764D6FBA96637FA4CB3BA6ECB7E68D8F6E9A623C02> |3 <001C60D8A8C9B80A3F7B> |49 <001C60D8A8C9B6F07E7A6C24167F62F3929362D0C8CFA3BDEA6DE5D1BDD3AF3027F5D8E0C285395169762D5E4B595B231C0672929EE3A77984B63857FC728F2A95D2EAEBF4D9EDA1F812B7> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H /Identity-H 0 [/YVBAKR+MalgunGothic-KSCpc-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf41.232 122.3 mo(\000&\000X\000V\000W\000R\000P\000H\000U\000\003\0001\000R)[3.83397 3.46802 2.53199 2.15401 3.47999 5.28003 3.23402 2.15402 2.04003 4.674 0 ]xsh83.66 125.66 mo
142.308 125.66 li
142.308 112.884 li
83.66 112.884 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
83.66 125.66 mo
142.308 125.66 li
142.308 112.884 li
83.66 112.884 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
764.5 89.29 mo
811.479 89.29 li
811.479 73.699 li
764.5 73.699 li
cp
/1 
[/DeviceCMYK] /CSA add_res
.865537 .506462 0 0 cmyk
ef
764.5 89.29 mo
811.479 89.29 li
811.479 73.699 li
764.5 73.699 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (YVBAKS+MalgunGothic-KSCpc-EUC-H)%%Title: (YVBAKS+MalgunGothic-KSCpc-EUC-H Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /YVBAKS+MalgunGothic-KSCpc-EUC-H def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-977 -248 1199 931} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 28215 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 3 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B64A9516EA237B20D5B2D84CDD00D591E734F491A9FC18DD814B78ACD8EE15> |2255 <001C60D8A8C9B5EE310323C97214A999BF7EB5B2AA606DD99401BEEB3616A18128705EC4116117613D7B9089DCC300C123AE6AC37E8EC4E69407EDE2BB76996B54891C3BFD89BD534CC679554CC0513C7216F77A1CEE32A8DA3B93E2723E96AB22BF23C69D0B7D2CCC500C6224A8E028C7C4A1C79E> |2972 <001C60D8A8C9B5EE31031248CFD2E8B8F897B79E2845FEF518AA2DD2E1FFB2CE18B85D2C18F6A131ABE944618B3E00CE7BAB387B7E13F7A2DC32963F1A9BC1052588910F4782CEFBAB5D66C1AA6E0AFBCD2C154F4616558F6605444517E3C50D3A618CCE829209A062C21585402583380C996A368821108AB6755AA3052DF413170EA89EDDD9EC00BD47591E863B4C9E2A387EF22C177A5C28C770C9C31384822C162AA2532D61838960FD4343E2524FBD65AFCFD75292E29391BA1758BDFF3E12B9EE2B6A63F1CB7C8CC7> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H /Identity-H 0 [/YVBAKS+MalgunGothic-KSCpc-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf782.06 83.3 mo(\010\317\013\234)[6 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory68 <001C60D8A8C9B7B3D0F88D735323D0338A12CC4138BFAB77333EB287DE428C1BDE11114E301269984B1D88C6215A0E35EE33478B125EDBFB4934820CD0338F4F78D165046FA0D3ED30A8FD3373445D8B4BB6080809225645DA419F9E741748458057B51CD58BE78F87EF18C69A0A924E533B8525C452276F7C7AC4AF3D655A27D0F1456942> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf185.3 122.42 mo(\000&\000X\000V\000W\000R\000P\000H\000U\000\003\0001\000D\000P\000H)[3.83397 3.46802 2.53198 2.15402 3.47998 5.28003 3.23402 2.15402 2.04004 4.674 3.12003 5.28003 0 ]xsh233.75 125.8 mo
295.143 125.8 li
295.143 113.024 li
233.75 113.024 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
233.75 125.8 mo
295.143 125.8 li
295.143 113.024 li
233.75 113.024 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
297.97 125.8 mo
310.746 125.8 li
310.746 113.024 li
297.97 113.024 li
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
297.97 125.8 mo
310.746 125.8 li
310.746 113.024 li
297.97 113.024 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 lw
303 117.99 mo
307.27 122.68 li
1 /0 /CSD get_res sepcs
0 sep
@
305.52 118.25 mo
305.52 117.01 304.52 116.01 303.28 116.01 cv
302.05 116.01 301.04 117.01 301.04 118.25 cv
301.04 119.48 302.05 120.49 303.28 120.49 cv
304.52 120.49 305.52 119.48 305.52 118.25 cv
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
305.52 118.25 mo
305.52 117.01 304.52 116.01 303.28 116.01 cv
302.05 116.01 301.04 117.01 301.04 118.25 cv
301.04 119.48 302.05 120.49 303.28 120.49 cv
304.52 120.49 305.52 119.48 305.52 118.25 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 8 GetGlyphDirectory54 <001C60D8A8C9B79C5FDF18DF54A05B08D39FD1B6390264E1C7D78334FFC021AF2E8EA2620C85F048182C0E15CFF8D7C96B5D1A9CD1FFFBB72988EC708971CB310857BA4B5ADEF34570E971D384842D79B910392AE88AF9067494FD39790F6E729C35E003188073AE8169BE50F9D050E17B4FCC4C587B9E957BB19ADCC9C295F36DC8F9173251820698F890B18E1F3F12B8541467CC538A1D7F6F565CF66773B846EEBEE16774FD96> |75 <001C60D8A8C9B7F88C2452EE00257475F46A5F170B447B44B584A130E5C2290908F1513AD4772E83A9BC31829A623B4BCC129A6C04B07E83D172B156CB6CCD26313B8433285D> |76 <001C60D8A8C9B874A69158345982D1C8117D2592AE3612133F7BB30EFBAD49695B1F7C6FAF523E811F3C3188B6FEE2356326F3CA323451DA905DC74C7940EFA29A2642C2DB68752AB321457E9FB92DF397FE0215> |83 <001C60D8A8C9B7C2FB3BB58448D8B66B5916213CFE979CF267F810B4029ABE61325F4B84DE27298FD24C52C85C53B7D547E406D2A3351E9BEF75DF0DD0A14430B489BAD3EAB5728F8A7D1DD218960B685841C5516C119B0C4CA7998306C776E17AEEC16C062D2BE80751F5E3C6D59DA4B7A650084F1C716DAB6659C2422F66DC8A439F> |55 <001C60D8A8C9B785CBB4231334084591B28AA7B09B5288CBA6A99A7C5CEE702E543743> |51 <001C60D8A8C9B7E02AAABE2C47B0B581723D80118D1A2338F19B6967B32AEA6E349C110382CA1E944C5311AE32198989F37A2CA0661ABA425C70992FCC808005A0A122EAB3CD8A326810A9BFB5CDC940263CD62375> |79 <001C60D8A8C9B874A685C5D263D3DF4FCFD8B403472B> |81 <001C60D8A8C9B7F94233000E9AADD4C5B4614F81D65537127D2A80863210A26D56B0DA5520DBA0EB486FB766124BF1C4D571291D4E602517DEFBF13CFED775EC877983482562D37C4E1D73FD> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf332.98 123.72 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\0003\000O\000D\000Q\000W)[3.258 3.47397 1.42801 3.60599 2.14804 3.23398 3.59399 2.04602 3.474 1.44 3.12003 3.46802 0 ]xsh373.32 127.08 mo
431.968 127.08 li
431.968 114.304 li
373.32 114.304 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
.75 lw
373.32 127.08 mo
431.968 127.08 li
431.968 114.304 li
373.32 114.304 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
145.11 125.66 mo
157.886 125.66 li
157.886 112.884 li
145.11 112.884 li
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
145.11 125.66 mo
157.886 125.66 li
157.886 112.884 li
145.11 112.884 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 lw
150.14 117.86 mo
154.41 122.55 li
1 /0 /CSD get_res sepcs
0 sep
@
152.66 118.11 mo
152.66 116.88 151.66 115.87 150.42 115.87 cv
149.19 115.87 148.18 116.88 148.18 118.11 cv
148.18 119.35 149.19 120.35 150.42 120.35 cv
151.66 120.35 152.66 119.35 152.66 118.11 cv
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
152.66 118.11 mo
152.66 116.88 151.66 115.87 150.42 115.87 cv
149.19 115.87 148.18 116.88 148.18 118.11 cv
148.18 119.35 149.19 120.35 150.42 120.35 cv
151.66 120.35 152.66 119.35 152.66 118.11 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
434.78 127.08 mo
447.556 127.08 li
447.556 114.304 li
434.78 114.304 li
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
.75 lw
434.78 127.08 mo
447.556 127.08 li
447.556 114.304 li
434.78 114.304 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 lw
439.8 119.27 mo
444.07 123.97 li
1 /0 /CSD get_res sepcs
0 sep
@
442.33 119.53 mo
442.33 118.29 441.32 117.29 440.09 117.29 cv
438.85 117.29 437.85 118.29 437.85 119.53 cv
437.85 120.77 438.85 121.77 440.09 121.77 cv
441.32 121.77 442.33 120.77 442.33 119.53 cv
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
442.33 119.53 mo
442.33 118.29 441.32 117.29 440.09 117.29 cv
438.85 117.29 437.85 118.29 437.85 119.53 cv
437.85 120.77 438.85 121.77 440.09 121.77 cv
441.32 121.77 442.33 120.77 442.33 119.53 cv
cp
1 /0 /CSD get_res sepcs
0 sep
@
gsave
0 595.2 mo
1647.72 595.2 li
1647.72 -.000244141 li
0 -.000244141 li
cp
eclp
.75 lw
0 595.275 mo
1647.78 595.275 li
1647.78 -.0045166 li
0 -.0045166 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
27.102 302.7 mo
91.226 302.7 li
91.226 281.862 li
27.102 281.862 li
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
.75 lw
27.102 302.7 mo
91.226 302.7 li
91.226 281.862 li
27.102 281.862 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 5 GetGlyphDirectory2185 <001C60D8A8C9B5EE31031DADD4A29A96229FE3AB833A91FA6A22DA43D9C5C2E590D579E700E5F2467C5666B91C9C31D8564ABAE14444B98A9D747FA722FD4A7A150D098E91DDA0D644FA15980D46F0F22C4D8A2409CEDF7B25D3A04DFBC877B8F26848DCC587C3E1899CAB5AC36DF2E4CBE3B71DC20A8C0F24F8342DFAE9288B81C9EF6CD12C65123DE4C8BE89B0AB795412D31A0EF8DC6C07896C5E1AF4415AA8055D8A9C7C> |2654 <001C60D8A8C9B5EE310326AFEDCD57B68E582AB5B2156ADC950E2DF05CCD6EAC08C6A5DD61CC434775D8FAD8C10807A95D8EF77D00585557016922418B1985FF7A7AE9B88CB140843521D5B3C479C8354AB19E6BA5184BEDB09FC420> |2771 <001C60D8A8C9B5EE31030402E2156FF976B367AB414D52FE5EB951C8CFFF57B39E7A327908FBB5BF487F7B40C212782FBF2E6CDD05C7BD9CA2EFC96ABD2C6E202FD0A1B9706ECC2885733C9F89E432EAB31C90AD4C0DAFC8E2A0BF40F35AF0EBCE9E79E52F6BC9044238C19286> |2183 <001C60D8A8C9B5EE31031D690C9415F360AF7E320DD024BFA92C4FCE498BE5C41203114D49248FBD30B1A0E489C72D912E82B6661C0B20155725687E40388E8BA8A4F34ED9C16D66E03B7622DD7391EA61F1880CC075CC1F98BE318B501B3B67EB66E13C8810E90F90C2CE5141443598E8A29114DBD7DA899066C4CDB76B367C2AD87DF145E37ED18E1657A59B5E702623E0> |1883 <001C60D8A8C9B5EE3103F1B4103EA65955265998386351C403EC07EE77E5A00918BAD43AA74F08878139A9D0DAC1CFAF7A52976950748DF8F376417B0A0D6FBD0B96D64154050BC48AA649BF8FF24E92328F9458BDE1AD7ACF5554DA8DA1C6F26B119014> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf31.104 294.14 mo(\010\211\012^\012\323\010\207\007[)sh/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf61.104 294.14 mo(\000\003)sh%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 4 GetGlyphDirectory795 <001C60D8A8C9B5EE310327592F9A372CA70D5FB36C7440F64828DB2356B21A666CCE094EE7E41E34AD4BA374BABD20DCD00CEF7E2D7EBFD89F6F419A8BF7198F2D9EBAF8697C8E> |1602 <001C60D8A8C9B5EE3100A9992E970600161ED7294BAF108493A0082A21680E124677A2C6F9637259DFAE536DD7BFC3701573248BCC3FBC6AE2B3BBC5427543315051C09580A0077ECE0E1D092B85290F755B912BBE9497C8260A> |2237 <001C60D8A8C9B5EE31031DAD24D96C9F505FE6A4ACC38B9ACE7C1EC9397A698EFAB96FBDCD6CFBFAEEA5B0388691BE86CD086B1FE25D20422068267FD929142511D4012C61C417AA8417DD2D13A36FE671B6C35ED0A547ADDE76942B59A30C44761615665A8EED3E63EC503D187461EDF60C4112F4803B53F248B87613FFA57325AAC7037946A126F58362E43FE806E85292A9FF82BA7F5A3A729A44B6B0156B9E4DC194B49FBAA62004AB4705F1EF7F15CFEE7B140BE0360583015F7A3B4894523E79B4F4165FDA2ABD36302DBB1898C331B115C400FD836666C79A3007A2999CC8ECF283F59EBF9AACEDCD2F31F9> |1599 <001C60D8A8C9B5EE3103508D360E81B7A17D8580EE8AFE7D3DCD5FE19B68DE36ED40F79AD7256FC600F0DA767E9650478D8CDFC7C34FB907BA71631920880D0260DE69BA62006B> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf63.216 294.14 mo(\003\033\006B\010\275\006?)sh51.011 334.23 mo
109.659 334.23 li
109.659 319.061 li
51.011 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.011 334.23 mo
109.659 334.23 li
109.659 319.061 li
51.011 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.011 318.98 mo
109.659 318.98 li
109.659 303.811 li
51.011 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.011 318.98 mo
109.659 318.98 li
109.659 303.811 li
51.011 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 7 GetGlyphDirectory40 <001C60D8A8C9B7B6440708C859E36A7FC0E415B87450C7BE0D2FBD1B9ABF315D15A2AE8C9711C5C567DBFDD0A94E> |39 <001C60D8A8C9B600E0311E1B3569BFF8A9C24AD947CB0ADD95081CF69AA70B77B77F2BDE38EB7B15CE0AFC2150AF86448BBDF1876EB2156A17CC58D0F3C5D335426442F438B6858407F14BCA0C6E> |44 <001C60D8A8C9B85C5CBA1F928C88F990E2B53BACC963E5> |47 <001C60D8A8C9B75BE516613D2573DD78BDCCCF974AC90F3000F80DA319> |41 <001C60D8A8C9B7A8F223C67A6C89544A785675FF3F184A4878072D0CA7C866CD63076CC05D274B9251> |50 <001C60D8A8C9B6F8EBCDD0851DB5F1E851D2382202DE2AF320A4413533902491E05EFDF517129D8EDA2EC1947DDC3AF8126201B5E43E69E1E012F1F9FDC81B66685D920E541B0197E7BBCEB8997FED79E61A5B144ADF9C0AE56E799957698F951CAD367E8A2B6603CE34F37125DD2747C2C80D33F2AEEBEC3A4DAB0E3CC60A056A30B75C94190A> |53 <001C60D8A8C9B7D98F6D44DD5A08714C94FDCDBCABA47AA44776C136A348561ADFBA1A8ADCBBB3030B6CE85E45C504239B2BFEF99EBDF6436FC912AD8ED0D3074D9D53635E0227AC407A277CBE11BA92BCF9F2BA1B55636C5AADE0341C8D00EA7E86D7D2721AB27673186F6BD6F5FC7F88CF005CB3FFAF50A9155A80F56E99> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf63.984 313.27 mo(\000\(\000'\000,\000\003\000'\000\(\000/\000\)\0002\0005)[3.10199 4.33197 1.56003 2.15403 4.30197 3.13199 2.87997 2.87996 4.67397 0 ]xsh109.66 334.23 mo
168.308 334.23 li
168.308 319.061 li
109.66 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
109.66 334.23 mo
168.308 334.23 li
168.308 319.061 li
109.66 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
109.66 318.98 mo
168.308 318.98 li
168.308 303.811 li
109.66 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
109.66 318.98 mo
168.308 318.98 li
168.308 303.811 li
109.66 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory45 <001C60D8A8C9B802B3DC4A76466F599331CD98D0908DF67F690E10E3D54082550AFF056BFDC9C8335E5BC69A372E590BAC84D23549E81223ED> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf124.8 313.27 mo(\000\(\000'\000,\000\003\000'\000\(\000/\000-\000,\0007)[3.10199 4.33197 1.56003 2.15402 4.30197 3.132 2.87997 2.16 1.56001 0 ]xsh168.31 334.23 mo
226.958 334.23 li
226.958 319.061 li
168.31 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.31 334.23 mo
226.958 334.23 li
226.958 319.061 li
168.31 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.31 318.98 mo
226.958 318.98 li
226.958 303.811 li
168.31 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.31 318.98 mo
226.958 318.98 li
226.958 303.811 li
168.31 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 3 GetGlyphDirectory48 <001C60D8A8C9B5BB11937DA17136F9B2294B8B2F6BCB4EA343231657F6906D296DF257A5EB5C5838A89E7D98AEB81CFAA575BF8634BAC26F3317BCCFFAD5045B7B7D479F97399B4B1DF6F55740F1C3CE3F42CBC6D03917BB77B247C2FB0114C61088BE8FE86B> |36 <001C60D8A8C9B647203F012A88A6265A5B99B5ACA3C6010D37721333D23562C933E27F8EF7F70BAA840A2C95BD352ADEA5A3915065A3C4599415E78F55737E1C2D1A1CB9BC6C> |56 <001C60D8A8C9B6323397882E116BF9D9DCE35C29B02C5C417C13180E58F9A960EC7EBBB8E8571E8E192DC5E3E000A1BDB6F97FA9AF56E52322> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf179.54 313.27 mo(\000\(\000'\000,\000\003\0000\000$\0001\0008\000$\000/)[3.10199 4.33197 1.56003 2.15402 5.51405 3.94803 4.59 4.18201 3.94803 0 ]xsh226.92 334.23 mo
285.568 334.23 li
285.568 319.061 li
226.92 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
226.92 334.23 mo
285.568 334.23 li
285.568 319.061 li
226.92 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
226.92 318.98 mo
285.568 318.98 li
285.568 303.811 li
226.92 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
226.92 318.98 mo
285.568 318.98 li
285.568 303.811 li
226.92 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory59 <001C60D8A8C9B7C2FB3B7540100B1908EEA7A5EB69C7A74DFC7280F4C5DE005026F5BF65F93864090FE0F276E7F0E81D787441CE43CEA1B409D8A63E9A01424346154C1EEF1B828BD4D5E68E850E8EE3AD28A07C7CC7ACC1B28B71> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf249.7 313.27 mo(\0007\000\(\000;\0007)[3.23398 3.10201 3.60599 0 ]xsh285.6 334.23 mo
344.248 334.23 li
344.248 319.061 li
285.6 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
285.6 334.23 mo
344.248 334.23 li
344.248 319.061 li
285.6 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
285.6 318.98 mo
344.248 318.98 li
344.248 303.811 li
285.6 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
285.6 318.98 mo
344.248 318.98 li
344.248 303.811 li
285.6 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory57 <001C60D8A8C9B66F63166BB6F3499D9C6CB9776D38E1B3399C16460395515DA361758ED5E4C4E744CA38AEB0FC477208683DA856B2333FBB> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf299.09 313.27 mo(\000\(\000'\000,\000\003\000$\000'\0009\000,\000&\000\()[3.10199 4.33197 1.56003 2.15402 3.94803 4.32599 3.72 1.67404 3.83395 0 ]xsh344.29 334.23 mo
402.938 334.23 li
402.938 319.061 li
344.29 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
344.29 334.23 mo
402.938 334.23 li
402.938 319.061 li
344.29 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
344.29 318.98 mo
402.938 318.98 li
402.938 303.811 li
344.29 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
344.29 318.98 mo
402.938 318.98 li
402.938 303.811 li
344.29 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory1656 <001C60D8A8C9B5EE310327592F9A372CA70D5FB36C744698746DBEE63755A652915CC2BD1C706DD7F2B336121CD24C3277D408B066EC5EF740605516E7FF> |712 <001C60D8A8C9B5EE310351B00D7067E9E2EF118A2A26EEA33A428B9714866FAC2BE92131C95E06E321B3F55815A11A1B8142A39990125E335C41AE906CD002E98E3A31DEC9D8D0> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf367.66 313.27 mo(\006x\002\310)[6 0 ]xsh402.98 334.23 mo
461.628 334.23 li
461.628 319.061 li
402.98 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
402.98 334.23 mo
461.628 334.23 li
461.628 319.061 li
402.98 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
402.98 318.98 mo
461.628 318.98 li
461.628 303.811 li
402.98 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
402.98 318.98 mo
461.628 318.98 li
461.628 303.811 li
402.98 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 4 GetGlyphDirectory1740 <001C60D8A8C9B5EE3100C7677AAA31D267E39285C540F4AC6DB512755C81DE846DEEE05A729619D08634D6F65DF3ECB334450AD729890FA95B50136A190415EEC3A7A7FDACD45DC8A53ACDE5D38BA2D64A360FC03232E4EB7120E3CAD3FF0C6785EB6D6C50B410D46BE4F0> |2120 <001C60D8A8C9B5EE310DB27F0A7744B7E5B5E60DCC7D9577008F8D2A452B966AE96E43DEA10152E5B6B02CD420C87280C96D723ECA0C7C5040DB0134F737EC02825F86AE0D314EDDE8D6C2B746EA409DEAE13D1A1D9C8DDEF5665040407D73871392F4BA3336EFC042B1B341D167FA36C5CDC5AA0B9FE001692C0F07F4C8A58F19B8274EEE53823C05F1F4BDE5FDCD6F178F6B1513DE9BD9D023AE93ADF90CC601CBDEFEF6F1DEA377DE1B477C2D85C1DB25C053389AE0E757114C6181AB301D1E8AA7FD8AEB2F9BD68891375A598C40183658E6B12704692C049606FE3B096F0A90A06B2637A5557FDFDCA7B7FD68B14A8C9AE96F560618FEE64B22AF77953A6EFF7C0AEA5092A213C7B1534E> |2154 <001C60D8A8C9B5EE31039613C2173D411B1960DB2B7A53A22EA23F7FB002D582ACE52F0C9D26446D02604ED03358B0ACE40037F91EE1BDEBF1CF8AA01A40913D5FE5A7D6D579992E6E0FF4D7C06DC8189FDE51638A6DCAFF9DEEFA3F6852F9477CB458444CA21943C059A59D191E0F88649942DB8179806DFB8F4E4FA7AE5E24E77812C3AA98BE2A5D352F091942778A01D5FCDD0ED009AE4B4E6FE67F18799E6906A93928FC4AAAB0> |1492 <001C60D8A8C9B5EE3103544B4984937F836408B5D147D6641553CE282EDDE621092FE2C3938834724F7842D356D66DD6A0C6A11CCD486EDA70135E270B4C87> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf420.34 313.27 mo(\006\314\010H\010j\005\324)sh27.102 334.23 mo
51.779 334.23 li
51.779 319.061 li
27.102 319.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.102 334.23 mo
51.779 334.23 li
51.779 319.061 li
27.102 319.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory20 <001C60D8A8C9B794D33B759C3A77EABFE6EE1FE51AB6FE08495A005E87FF05EB561484F36A8345585B7906FFBCD0B7902129A8930D> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf37.8 328.51 mo(\000\024)sh27.102 318.98 mo
51.779 318.98 li
51.779 303.811 li
27.102 303.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.102 318.98 mo
51.779 318.98 li
51.779 303.811 li
27.102 303.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf35.352 313.27 mo(\0001\000R)[4.56 0 ]xsh766.52 299.18 mo
813.499 299.18 li
813.499 283.589 li
766.52 283.589 li
cp
.865537 .506462 0 0 cmyk
ef
766.52 299.18 mo
813.499 299.18 li
813.499 283.589 li
766.52 283.589 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory2229 <001C60D8A8C9B5EE31031FC4BB12E64A904295E6A73F22FD74BEAE3DAE89DDBC00D3C540B40E693F9944B997B2FAD696682D4A3BC785393F14E550E1798C566769F00191CC990373E29F4FB8AE86D4EBD92BAE3368DF173C87FCE678F8AB9EFED8A3D20250A87E882831631393D8C1> |2208 <001C60D8A8C9B5EE3100D77E2404652A095408F5500DDFA0A056CC05BB548CD09B2EDDDC52344EB6EFD53E1A6946BE73484E9D6AC331392124C3A61CDB8D5EC8DBA759E1C95EFBE974BC9ED08E34ECA135EC3A8170147502EC8691062F5CDAD472CC69B36E02C128A9C7ED1DB41F269A1F8F66AEAF69D8A7FA879D443958DB5DEE884F148CA8DF4A8BFBBED4569073D01A56CD23E3CBFFDD617E77DD12DEEB5141AD9DAE4092F208F15BBFFCAEC9C49BAA8BEBF446E6AE46E9B84010C0BDE5107AA1DA147CEEB40A612879B4087E2155B9573E6A8FAC7EC9E4CC95709A707E84679C7618C14C7E747D0205DAC027D6> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf784.08 293.26 mo(\010\265\010\240)[6 0 ]xsh27.414 184.64 mo
91.538 184.64 li
91.538 163.802 li
27.414 163.802 li
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
27.414 184.64 mo
91.538 184.64 li
91.538 163.802 li
27.414 163.802 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory71 <001C60D8A8C9B7C12A52567126BCBF21D4C432BE6A23DC61B19A9047388211B561519D0AEFD6405836B0DF86494A175C41337C99F68FA947F14B3B499DD2E3A08512ABA496B6281A7E442B46176757E931D40E09DEA600DE412AF612AF6F3D3E87852AABDC0B859A3C4F83876ECF4C95D54C63A582C57EA5802E4B4B90BD8699FA760F5E> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf37.224 176.06 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\000$\000G\000G\000U\000H\000V\000V)[3.258 3.47397 1.42801 3.60599 2.14803 3.23398 3.59399 2.04603 3.94802 3.61203 3.61203 2.14203 3.23402 2.52 0 ]xsh169.85 261.91 mo
228.498 261.91 li
228.498 246.741 li
169.85 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
169.85 261.91 mo
228.498 261.91 li
228.498 246.741 li
169.85 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
169.85 247.41 mo
228.498 247.41 li
228.498 232.241 li
169.85 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
169.85 247.41 mo
228.498 247.41 li
228.498 232.241 li
169.85 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
169.85 232.16 mo
228.498 232.16 li
228.498 216.991 li
169.85 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
169.85 232.16 mo
228.498 232.16 li
228.498 216.991 li
169.85 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
169.85 216.92 mo
228.498 216.92 li
228.498 201.751 li
169.85 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
169.85 216.92 mo
228.498 216.92 li
228.498 201.751 li
169.85 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
169.85 201.67 mo
228.498 201.67 li
228.498 186.501 li
169.85 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
169.85 201.67 mo
228.498 201.67 li
228.498 186.501 li
169.85 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf181.01 195.94 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\0003\000O\000D\000Q\000W)[3.258 3.47397 1.42801 3.60599 2.14803 3.23398 3.59399 2.04604 3.474 1.44002 3.12003 3.46802 0 ]xsh228.5 261.91 mo
287.148 261.91 li
287.148 246.741 li
228.5 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
228.5 261.91 mo
287.148 261.91 li
287.148 246.741 li
228.5 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
228.5 247.41 mo
287.148 247.41 li
287.148 232.241 li
228.5 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
228.5 247.41 mo
287.148 247.41 li
287.148 232.241 li
228.5 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
228.5 232.16 mo
287.148 232.16 li
287.148 216.991 li
228.5 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
228.5 232.16 mo
287.148 232.16 li
287.148 216.991 li
228.5 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
228.5 216.92 mo
287.148 216.92 li
287.148 201.751 li
228.5 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
228.5 216.92 mo
287.148 216.92 li
287.148 201.751 li
228.5 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
228.5 201.67 mo
287.148 201.67 li
287.148 186.501 li
228.5 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
228.5 201.67 mo
287.148 201.67 li
287.148 186.501 li
228.5 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf239.88 195.94 mo(\0006\000K\000L\000S\000\003\000\)\000U\000R\000P\000\003\000,\000')[3.258 3.47397 1.42801 3.60599 2.14804 2.99396 2.16 3.59399 5.28003 2.04605 1.67401 0 ]xsh287.15 261.91 mo
345.798 261.91 li
345.798 246.741 li
287.15 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
287.15 261.91 mo
345.798 261.91 li
345.798 246.741 li
287.15 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
287.15 247.41 mo
345.798 247.41 li
345.798 232.241 li
287.15 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
287.15 247.41 mo
345.798 247.41 li
345.798 232.241 li
287.15 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
287.15 232.16 mo
345.798 232.16 li
345.798 216.991 li
287.15 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
287.15 232.16 mo
345.798 232.16 li
345.798 216.991 li
287.15 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
287.15 216.92 mo
345.798 216.92 li
345.798 201.751 li
287.15 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
287.15 216.92 mo
345.798 216.92 li
345.798 201.751 li
287.15 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
287.15 201.67 mo
345.798 201.67 li
345.798 186.501 li
287.15 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
287.15 201.67 mo
345.798 201.67 li
345.798 186.501 li
287.15 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory52 <001C60D8A8C9B6F8EBCDD0851DB5F1E851D238224334A6AB37E8DC2C644EBF23EF7D71DFC93C190B9E5AF2AF3E47669C26039F209BA35F96E5EC43BC4AC7829B20AB4E3768238E4E758AF1824638568AFB5F28309CE7400E083F512B7FCCFB24B45F2D6940D527A4CA966C3A5E33E45C6572F0DCD071BAEE54DE08653F2EFF408A08593315377F4BC5FCD89B7380106E76E699D56184333BF9> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf299.59 195.94 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\0006\000\(\0004)[3.258 3.47397 1.42801 3.60599 2.14804 3.23398 3.59399 2.04602 3.258 3.10199 0 ]xsh345.76 261.91 mo
404.408 261.91 li
404.408 246.741 li
345.76 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
345.76 261.91 mo
404.408 261.91 li
404.408 246.741 li
345.76 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
345.76 247.41 mo
404.408 247.41 li
404.408 232.241 li
345.76 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
345.76 247.41 mo
404.408 247.41 li
404.408 232.241 li
345.76 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
345.76 232.16 mo
404.408 232.16 li
404.408 216.991 li
345.76 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
345.76 232.16 mo
404.408 232.16 li
404.408 216.991 li
345.76 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
345.76 216.92 mo
404.408 216.92 li
404.408 201.751 li
345.76 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
345.76 216.92 mo
404.408 216.92 li
404.408 201.751 li
345.76 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
345.76 201.67 mo
404.408 201.67 li
404.408 186.501 li
345.76 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
345.76 201.67 mo
404.408 201.67 li
404.408 186.501 li
345.76 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf359.64 195.94 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\000&\000')[3.258 3.47397 1.42801 3.60599 2.14804 3.23398 3.59399 2.04602 3.83395 0 ]xsh404.44 261.91 mo
463.088 261.91 li
463.088 246.741 li
404.44 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
404.44 261.91 mo
463.088 261.91 li
463.088 246.741 li
404.44 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
404.44 247.41 mo
463.088 247.41 li
463.088 232.241 li
404.44 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
404.44 247.41 mo
463.088 247.41 li
463.088 232.241 li
404.44 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
404.44 232.16 mo
463.088 232.16 li
463.088 216.991 li
404.44 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
404.44 232.16 mo
463.088 232.16 li
463.088 216.991 li
404.44 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
404.44 216.92 mo
463.088 216.92 li
463.088 201.751 li
404.44 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
404.44 216.92 mo
463.088 216.92 li
463.088 201.751 li
404.44 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
404.44 201.67 mo
463.088 201.67 li
463.088 186.501 li
404.44 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
404.44 201.67 mo
463.088 201.67 li
463.088 186.501 li
404.44 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory70 <001C60D8A8C9B742B2428B3B6C865526E80DEF82792AB6BD7FE0251944172A1030E2D4EF323C7D7D680AD128BA87355577AA4C936E4DFB9D48953084015C008CBEFE4D4D51C73B3FB17C12F530E4B478B61669C80216BB2D29880173CCA936DF65EDF8F2E2> |78 <001C60D8A8C9B7A15751046F318014EFDF24C960F649EEF3BE98C24BD4336374C4D05FA260AA78D9342A04A48F79E2EA9C3393B481> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf421.78 195.94 mo(\000'\000R\000F\000N\000\003\0001\000R)[4.30197 3.612 2.76004 3.11398 2.04004 4.67398 0 ]xsh463.13 261.91 mo
521.778 261.91 li
521.778 246.741 li
463.13 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
463.13 261.91 mo
521.778 261.91 li
521.778 246.741 li
463.13 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
463.13 247.41 mo
521.778 247.41 li
521.778 232.241 li
463.13 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
463.13 247.41 mo
521.778 247.41 li
521.778 232.241 li
463.13 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
463.13 232.16 mo
521.778 232.16 li
521.778 216.991 li
463.13 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
463.13 232.16 mo
521.778 232.16 li
521.778 216.991 li
463.13 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
463.13 216.92 mo
521.778 216.92 li
521.778 201.751 li
463.13 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
463.13 216.92 mo
521.778 216.92 li
521.778 201.751 li
463.13 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
463.13 201.67 mo
521.778 201.67 li
521.778 186.501 li
463.13 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
463.13 201.67 mo
521.778 201.67 li
521.778 186.501 li
463.13 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf469.39 195.94 mo(\0006\000K\000L\000S\000\003\000\)\000U\000R\000P\000\003\0001\000D\000P\000H)[3.258 3.47397 1.42801 3.60599 2.14804 2.99396 2.16 3.59399 5.28003 2.04605 4.56 3.12003 5.28 0 ]xsh521.82 261.91 mo
580.468 261.91 li
580.468 246.741 li
521.82 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
521.82 261.91 mo
580.468 261.91 li
580.468 246.741 li
521.82 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
521.82 247.41 mo
580.468 247.41 li
580.468 232.241 li
521.82 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
521.82 247.41 mo
580.468 247.41 li
580.468 232.241 li
521.82 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
521.82 232.16 mo
580.468 232.16 li
580.468 216.991 li
521.82 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
521.82 232.16 mo
580.468 232.16 li
580.468 216.991 li
521.82 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
521.82 216.92 mo
580.468 216.92 li
580.468 201.751 li
521.82 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
521.82 216.92 mo
580.468 216.92 li
580.468 201.751 li
521.82 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
521.82 201.67 mo
580.468 201.67 li
580.468 186.501 li
521.82 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
521.82 201.67 mo
580.468 201.67 li
580.468 186.501 li
521.82 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf536.06 195.94 mo(\0006\000X\000S\000S\000O\000L\000H\000U\000\003\000,\000')[3.258 3.46802 3.60596 3.58801 1.44 1.55402 3.12006 2.15399 2.15405 1.56 0 ]xsh580.5 261.91 mo
639.148 261.91 li
639.148 246.741 li
580.5 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
580.5 261.91 mo
639.148 261.91 li
639.148 246.741 li
580.5 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
580.5 247.41 mo
639.148 247.41 li
639.148 232.241 li
580.5 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
580.5 247.41 mo
639.148 247.41 li
639.148 232.241 li
580.5 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
580.5 232.16 mo
639.148 232.16 li
639.148 216.991 li
580.5 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
580.5 232.16 mo
639.148 232.16 li
639.148 216.991 li
580.5 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
580.5 216.92 mo
639.148 216.92 li
639.148 201.751 li
580.5 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
580.5 216.92 mo
639.148 216.92 li
639.148 201.751 li
580.5 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
580.5 201.67 mo
639.148 201.67 li
639.148 186.501 li
580.5 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
580.5 201.67 mo
639.148 201.67 li
639.148 186.501 li
580.5 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf590.35 195.94 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\0001\000D\000P\000H)[3.258 3.47394 1.42804 3.60602 2.14801 3.23395 3.59399 2.04608 4.56 3.12 5.28003 0 ]xsh639.19 261.91 mo
697.838 261.91 li
697.838 246.741 li
639.19 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
639.19 261.91 mo
697.838 261.91 li
697.838 246.741 li
639.19 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
639.19 247.41 mo
697.838 247.41 li
697.838 232.241 li
639.19 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
639.19 247.41 mo
697.838 247.41 li
697.838 232.241 li
639.19 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
639.19 232.16 mo
697.838 232.16 li
697.838 216.991 li
639.19 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
639.19 232.16 mo
697.838 232.16 li
697.838 216.991 li
639.19 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
639.19 216.92 mo
697.838 216.92 li
697.838 201.751 li
639.19 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
639.19 216.92 mo
697.838 216.92 li
697.838 201.751 li
639.19 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
639.19 201.67 mo
697.838 201.67 li
697.838 186.501 li
639.19 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
639.19 201.67 mo
697.838 201.67 li
697.838 186.501 li
639.19 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory37 <001C60D8A8C9B7F44ACC51EB73C99557EB77F927DAAF42B02BC7C70F00FCFFFC97F8E362E0E845D8B2E8D9FA7FBA6CB911FD06BD7071F30146AF888E0C383C4466956A039F71A136C41F3F1A303DBC566D2434173E607967F53F32DDFD2F565F8A38108AE59E5001674EFCB9E4CE6807B222D5DA83A9A64FF7DEE0688AC5C6F900C93E69A161F42218A064> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf651 195.94 mo(\000%\000L\000O\000O\000\003\0007\000R\000\003\0001\000D\000P\000H)[3.47998 1.44 1.55402 1.44 2.15399 3.12 3.59399 2.16003 4.56 3.12006 5.28003 0 ]xsh697.87 261.91 mo
756.518 261.91 li
756.518 246.741 li
697.87 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
697.87 261.91 mo
756.518 261.91 li
756.518 246.741 li
697.87 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
697.87 247.41 mo
756.518 247.41 li
756.518 232.241 li
697.87 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
697.87 247.41 mo
756.518 247.41 li
756.518 232.241 li
697.87 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
697.87 232.16 mo
756.518 232.16 li
756.518 216.991 li
697.87 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
697.87 232.16 mo
756.518 232.16 li
756.518 216.991 li
697.87 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
697.87 216.92 mo
756.518 216.92 li
756.518 201.751 li
697.87 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
697.87 216.92 mo
756.518 216.92 li
756.518 201.751 li
697.87 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
697.87 201.67 mo
756.518 201.67 li
756.518 186.501 li
697.87 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
697.87 201.67 mo
756.518 201.67 li
756.518 186.501 li
697.87 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf714.82 195.94 mo(\000%\000L\000O\000O\000\003\0007\000R\000\003\000,\000')[3.47998 1.44 1.55402 1.44 2.15405 3.11993 3.59399 2.16003 1.56006 0 ]xsh756.56 261.91 mo
815.208 261.91 li
815.208 246.741 li
756.56 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
756.56 261.91 mo
815.208 261.91 li
815.208 246.741 li
756.56 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
756.56 247.41 mo
815.208 247.41 li
815.208 232.241 li
756.56 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
756.56 247.41 mo
815.208 247.41 li
815.208 232.241 li
756.56 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
756.56 232.16 mo
815.208 232.16 li
815.208 216.991 li
756.56 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
756.56 232.16 mo
815.208 232.16 li
815.208 216.991 li
756.56 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
756.56 216.92 mo
815.208 216.92 li
815.208 201.751 li
756.56 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
756.56 216.92 mo
815.208 216.92 li
815.208 201.751 li
756.56 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
756.56 201.67 mo
815.208 201.67 li
815.208 186.501 li
756.56 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
756.56 201.67 mo
815.208 201.67 li
815.208 186.501 li
756.56 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf760.08 195.94 mo(\0006\000K\000L\000S\000\003\000\)\000U\000R\000P\000\003\000$\000G\000G\000U\000H\000V\000V)[3.258 3.474 1.42798 3.60602 2.14801 2.99396 2.16003 3.59399 5.28003 2.04602 3.948 3.61206 3.612 2.14203 3.23401 2.52002 0 ]xsh815.25 261.91 mo
873.898 261.91 li
873.898 246.741 li
815.25 246.741 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
815.25 261.91 mo
873.898 261.91 li
873.898 246.741 li
815.25 246.741 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
815.25 247.41 mo
873.898 247.41 li
873.898 232.241 li
815.25 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
815.25 247.41 mo
873.898 247.41 li
873.898 232.241 li
815.25 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
815.25 232.16 mo
873.898 232.16 li
873.898 216.991 li
815.25 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
815.25 232.16 mo
873.898 232.16 li
873.898 216.991 li
815.25 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
815.25 216.92 mo
873.898 216.92 li
873.898 201.751 li
815.25 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
815.25 216.92 mo
873.898 216.92 li
873.898 201.751 li
815.25 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
815.25 201.67 mo
873.898 201.67 li
873.898 186.501 li
815.25 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
815.25 201.67 mo
873.898 201.67 li
873.898 186.501 li
815.25 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory21 <001C60D8A8C9B794D33B782969B437FCCDAFBA60A17CCFF1706E4D6A2B4C7B09A48080FAF4FE2C5C49146DAABAD5EDB6F0BD1842FC426EA491EAA282E9D6C9C320C9C2ED070B9A3E73CC581242E959F124EF752D3D5C741757D10C60F1868E8FA1314906FC336570055A54A716406CAADB074882C7F300A8750DD8B5447B1303C11CF0E78BE89E5E76229CF1974F75C5ADECD7> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf817.13 195.94 mo(\0006\000K\000L\000S\000\003\000\)\000U\000R\000P\000\003\000$\000G\000G\000U\000H\000V\000V\000\025)[3.258 3.47394 1.42804 3.60602 2.14801 2.99396 2.16003 3.59399 5.28003 2.04602 3.948 3.61206 3.612 2.14203 3.23401 2.52002 2.63397 0 ]xsh873.93 261.98 mo
932.578 261.98 li
932.578 246.811 li
873.93 246.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
873.93 261.98 mo
932.578 261.98 li
932.578 246.811 li
873.93 246.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
873.19 247.41 mo
931.838 247.41 li
931.838 232.241 li
873.19 232.241 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
873.19 247.41 mo
931.838 247.41 li
931.838 232.241 li
873.19 232.241 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
873.19 232.16 mo
931.838 232.16 li
931.838 216.991 li
873.19 216.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
873.19 232.16 mo
931.838 232.16 li
931.838 216.991 li
873.19 216.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
873.19 216.92 mo
931.838 216.92 li
931.838 201.751 li
873.19 201.751 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
873.19 216.92 mo
931.838 216.92 li
931.838 201.751 li
873.19 201.751 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
873.19 201.67 mo
931.838 201.67 li
931.838 186.501 li
873.19 186.501 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
873.19 201.67 mo
931.838 201.67 li
931.838 186.501 li
873.19 186.501 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf880.32 195.94 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\000$\000G\000G\000U\000H\000V\000V)[3.258 3.474 1.42798 3.60602 2.14801 3.23395 3.59399 2.04608 3.948 3.61206 3.612 2.14203 3.23401 2.52002 0 ]xsh27.414 261.16 mo
52.091 261.16 li
52.091 245.991 li
27.414 245.991 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.414 261.16 mo
52.091 261.16 li
52.091 245.991 li
27.414 245.991 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory23 <001C60D8A8C9B794D33B631B04D6680C2BFF7184C8CBE7AD3EE40E771B51F4B9611294E7C5BFE36212EFD51C73ECEE49E9C8FCD1D93E0337C5B04254D8A1199720FB7F534BDDDE20> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.112 255.43 mo(\000\027)sh27.414 246.66 mo
52.091 246.66 li
52.091 231.491 li
27.414 231.491 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.414 246.66 mo
52.091 246.66 li
52.091 231.491 li
27.414 231.491 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory22 <001C60D8A8C9B794D3005426888C38CD2281843C5A3288A9324C02911EDE3FA0F590EE886E683538A93E07E073F95F2FE9E5C692F90FAF81D1C7110F5CDB3C0BE07C56E73C6D6988D274AE5CCFEF68760395183797C2675EEE3917B2F8B3BB3B6BE4D0ADD7B89C127F759224E919D99840F06023EF3FBB26065E3CC332D8098858B9DC9A> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.112 240.94 mo(\000\026)sh27.414 231.42 mo
52.091 231.42 li
52.091 216.251 li
27.414 216.251 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.414 231.42 mo
52.091 231.42 li
52.091 216.251 li
27.414 216.251 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.112 225.67 mo(\000\025)sh27.414 216.17 mo
52.091 216.17 li
52.091 201.001 li
27.414 201.001 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.414 216.17 mo
52.091 216.17 li
52.091 201.001 li
27.414 201.001 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.112 210.43 mo(\000\024)sh27.414 200.93 mo
52.091 200.93 li
52.091 185.761 li
27.414 185.761 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.414 200.93 mo
52.091 200.93 li
52.091 185.761 li
27.414 185.761 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf35.664 195.19 mo(\0001\000R)[4.56 0 ]xsh766.83 181.12 mo
813.809 181.12 li
813.809 165.529 li
766.83 165.529 li
cp
.865537 .506462 0 0 cmyk
ef
766.83 181.12 mo
813.809 181.12 li
813.809 165.529 li
766.83 165.529 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf784.39 175.18 mo(\010\265\010\240)[6 0 ]xsh716.46 181.12 mo
763.439 181.12 li
763.439 165.529 li
716.46 165.529 li
cp
.865537 .506462 0 0 cmyk
ef
716.46 181.12 mo
763.439 181.12 li
763.439 165.529 li
716.46 165.529 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory1741 <001C60D8A8C9B5EE3100D77E2404652A095408F5500DDFA0A05429F9B47252688799010F4E9D48D768289D201BAC336E66793E18459222DABE38590801D7EA3B7F8329E2AB2BC30E2314072DF130B7A365CB28FE860725C316CFC175A3299254DE08D8CCA76DF8321A3A29B6762E4030E8A1FC9B17DF40E1FBE06963C7> |2239 <001C60D8A8C9B5EE31030F2320FE16B93AE906FA55D0D1F7AFBE07DD103E7CC8E6ABC32F741ECE0CAAFBEAC47085AE31E240BEC1BF4E970418C7C477DE03FE371BF41FCFCBBB0472988B44BD31B5BDA0A25EF17D05D30F65FC070C2C7918D2E70DBD8F64584D0FD6AA4BF39EF54ACCCB969EC28B48659EABD13A5A> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf734.02 175.18 mo(\006\315\010\277)[6 0 ]xsh666.1 181.12 mo
713.079 181.12 li
713.079 165.529 li
666.1 165.529 li
cp
.865537 .506462 0 0 cmyk
ef
666.1 181.12 mo
713.079 181.12 li
713.079 165.529 li
666.1 165.529 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory2484 <001C60D8A8C9B5EE310080A7672442EA96F33A5B20698749E8970BE1D0DEEF3ECF49DFD1F2DBBCF6BD1087392DC2263EB175183D09D6A0E9CE683B949238CEF4F9041A1140F6DDA966D97CFFEE2AF00FD48EE3559DC6A1C491EE0ADB2EAF219807702A271D31B139E3061BA7C8197D75E391CF3272107BBC> |636 <001C60D8A8C9B5EE3100CD8E44322D7E3DD8683565C090274F5E3F42B065B00D426AAA421F6B48C2AA07A7DB5B4083270E0BEECEAEEBC9193BCC20269F0695AB96DA0A97C604C6AD3E3E3A> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf683.64 175.18 mo(\011\264\002|)[6 0 ]xsh931.71 261.98 mo
990.358 261.98 li
990.358 246.811 li
931.71 246.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
931.71 261.98 mo
990.358 261.98 li
990.358 246.811 li
931.71 246.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
931.71 247.48 mo
990.358 247.48 li
990.358 232.311 li
931.71 232.311 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
931.71 247.48 mo
990.358 247.48 li
990.358 232.311 li
931.71 232.311 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
931.71 232.23 mo
990.358 232.23 li
990.358 217.061 li
931.71 217.061 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
931.71 232.23 mo
990.358 232.23 li
990.358 217.061 li
931.71 217.061 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
931.71 216.98 mo
990.358 216.98 li
990.358 201.811 li
931.71 201.811 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
931.71 216.98 mo
990.358 216.98 li
990.358 201.811 li
931.71 201.811 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
931.71 201.74 mo
990.358 201.74 li
990.358 186.571 li
931.71 186.571 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
931.71 201.74 mo
990.358 201.74 li
990.358 186.571 li
931.71 186.571 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf937.2 196.01 mo(\0006\000K\000L\000S\000\003\0007\000R\000\003\000$\000G\000G\000U\000H\000V\000V\000\025)[3.258 3.474 1.42798 3.60602 2.14801 3.23395 3.59399 2.04608 3.948 3.61206 3.612 2.14203 3.23401 2.52002 2.63397 0 ]xsh51.405 452.14 mo
110.053 452.14 li
110.053 436.971 li
51.405 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 452.14 mo
110.053 452.14 li
110.053 436.971 li
51.405 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 467.38 mo
110.053 467.38 li
110.053 452.211 li
51.405 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 467.38 mo
110.053 467.38 li
110.053 452.211 li
51.405 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 482.63 mo
110.053 482.63 li
110.053 467.461 li
51.405 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 482.63 mo
110.053 482.63 li
110.053 467.461 li
51.405 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 543.613 mo
110.053 543.613 li
110.053 528.444 li
51.405 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 543.613 mo
110.053 543.613 li
110.053 528.444 li
51.405 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 528.367 mo
110.053 528.367 li
110.053 513.198 li
51.405 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 528.367 mo
110.053 528.367 li
110.053 513.198 li
51.405 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 513.121 mo
110.053 513.121 li
110.053 497.952 li
51.405 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 513.121 mo
110.053 513.121 li
110.053 497.952 li
51.405 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 497.875 mo
110.053 497.875 li
110.053 482.706 li
51.405 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 497.875 mo
110.053 497.875 li
110.053 482.706 li
51.405 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 436.89 mo
110.053 436.89 li
110.053 421.721 li
51.405 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 436.89 mo
110.053 436.89 li
110.053 421.721 li
51.405 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 421.65 mo
110.053 421.65 li
110.053 406.481 li
51.405 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 421.65 mo
110.053 421.65 li
110.053 406.481 li
51.405 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 406.4 mo
110.053 406.4 li
110.053 391.231 li
51.405 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 406.4 mo
110.053 406.4 li
110.053 391.231 li
51.405 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
51.405 391.15 mo
110.053 391.15 li
110.053 375.981 li
51.405 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
51.405 391.15 mo
110.053 391.15 li
110.053 375.981 li
51.405 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf59.112 385.46 mo(\000\(\000'\000,\000\003)[3.10199 4.33197 1.56003 0 ]xsh%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory2739 <001C60D8A8C9B5EE3100C1306CC87A7C9A4E19F159478ECFB5A4A41C957C90DC00D198ADFD31D838822343220C957497F29CDB41CD2101C08746FC4B9C40B698DD6032F4C126A254EC8827867F82381E18CE79220361232BD0D8CB064D43B2F8BFA987> |2186 <001C60D8A8C9B5EE31031C738AC670F4B380DF214AEC715235C0854E08138A80BB5C763D54DE1D80EBFB6DB856845A9340B59E8A1EF6A858532EB3F6F045582618B7111A11CC30826F4E42DF72901A7ED648E73B864425D7E36EC33A056BAE5D93C8799671827CA5A3B32F95B3F4B27CE89B66293D12FC041FB2EE69D7CACE3C5C8DB6A693A732542C40D071E4B8B9C4461D21783EC9895D29D02420595B8648085EDE71FEC7DC6DC518B2C7B36D2D6EDF5FBC92D0> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf70.248 385.46 mo(\012\263\010\212)[6 0 ]xsh/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf82.248 385.46 mo(\000\003)sh%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 3 GetGlyphDirectory2550 <001C60D8A8C9B5EE31031DA20F2E93770FFF835B18092ED441345194B77E86AAA1485322D208D399B696E30EC6761CD77D189319C198F808E2F5A405DCAC9FFC09968441DBABF0AA4AC747E9F8169A3DEDBC67FCCF333B14221EB13AB39776DB6C1E6D3FF1921CF5181896A2E078FF29D50A5DCFA48E60472AA1D7CE608A> |1312 <001C60D8A8C9B5EE31031DAD258E4D9F5D8EEEF498EBC66CF0A4E59198714F933BEA7EC7AE6653CEE03EE0BBAA126AE12F4410F1037F7860B47D0ECE774FD3912D8EE4A5E63A51C62F1376EAABF2A7C07EC31EEA47D25FB335CFCDF578630CA0B8C25058F59CC6C9990EAFBBDE42FFBD3751A2E160692CB9C797> |1464 <001C60D8A8C9B5EE3102EEB1046CAD5ABA48D69D6A774EA256637479003666FC7AD8582E66A471D2F36A06DB50CBDB1F135262FDD0F5975B699C6870361FD47EEBBAD7E929091977BA0D1C21A670CCF74A122EAE47DA2D9025BEDEC207A85EAFC6C3705579DC26A4BCCBEE657261C2B74105AC9F7C300E8D83969D595A0409BAE27D3CEFDA4CF482C18CDB4F78F6A5204D6D9E888E0946E6B4E589E2F0D60E42928D4ED40A7C5D0F19DE25284182CF65C8C4226CADBD33128B44F4FDA1268C3B8BA448> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf84.36 385.46 mo(\011\366\005 \005\270)sh110.05 452.14 mo
168.698 452.14 li
168.698 436.971 li
110.05 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 452.14 mo
168.698 452.14 li
168.698 436.971 li
110.05 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 467.38 mo
168.698 467.38 li
168.698 452.211 li
110.05 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 467.38 mo
168.698 467.38 li
168.698 452.211 li
110.05 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 482.63 mo
168.698 482.63 li
168.698 467.461 li
110.05 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 482.63 mo
168.698 482.63 li
168.698 467.461 li
110.05 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 543.613 mo
168.698 543.613 li
168.698 528.444 li
110.05 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 543.613 mo
168.698 543.613 li
168.698 528.444 li
110.05 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 528.367 mo
168.698 528.367 li
168.698 513.198 li
110.05 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 528.367 mo
168.698 528.367 li
168.698 513.198 li
110.05 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 513.121 mo
168.698 513.121 li
168.698 497.952 li
110.05 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 513.121 mo
168.698 513.121 li
168.698 497.952 li
110.05 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 497.875 mo
168.698 497.875 li
168.698 482.706 li
110.05 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 497.875 mo
168.698 497.875 li
168.698 482.706 li
110.05 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 436.89 mo
168.698 436.89 li
168.698 421.721 li
110.05 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 436.89 mo
168.698 436.89 li
168.698 421.721 li
110.05 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 421.65 mo
168.698 421.65 li
168.698 406.481 li
110.05 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 421.65 mo
168.698 421.65 li
168.698 406.481 li
110.05 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 406.4 mo
168.698 406.4 li
168.698 391.231 li
110.05 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 406.4 mo
168.698 406.4 li
168.698 391.231 li
110.05 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
110.05 391.15 mo
168.698 391.15 li
168.698 375.981 li
110.05 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
110.05 391.15 mo
168.698 391.15 li
168.698 375.981 li
110.05 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory2133 <001C60D8A8C9B5EE3103177458F88B48602A742E7380EF68C04276F78B90F4078CB66EDBAA46ED3170441DC9867FE7CFD57600325692A74D68652A647D86DFB738E6EF0F37ECAD7BC4EDA7CE7431FB7F52968495FC9E9B0E4EAEA7D83D8EBE8192C9EBB828CD8A1F4B6FADD2F1390B8FE8FED746E23C0AC1635CA9B42325F9B8E488D845A1E705C21AC4FF5A9A149D1B769518FFCFDAD28CDDE9DABE078CD03F8DFBCA4C38EFEC03F6732C930A5CA103338526D516BD8A51E5CEE3E766AD70CFFD1A239D2C2DA26A1D1FFEFABA48424DB65894CA651A2608814E36> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf124.39 385.46 mo(\010U\006B\011\366\005 \005\270)sh168.7 452.14 mo
264.187 452.14 li
264.187 436.971 li
168.7 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 452.14 mo
264.187 452.14 li
264.187 436.971 li
168.7 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 467.38 mo
264.187 467.38 li
264.187 452.211 li
168.7 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 467.38 mo
264.187 467.38 li
264.187 452.211 li
168.7 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 482.63 mo
264.187 482.63 li
264.187 467.461 li
168.7 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 482.63 mo
264.187 482.63 li
264.187 467.461 li
168.7 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 543.613 mo
264.187 543.613 li
264.187 528.444 li
168.7 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 543.613 mo
264.187 543.613 li
264.187 528.444 li
168.7 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 528.367 mo
264.187 528.367 li
264.187 513.198 li
168.7 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 528.367 mo
264.187 528.367 li
264.187 513.198 li
168.7 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 513.121 mo
264.187 513.121 li
264.187 497.952 li
168.7 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 513.121 mo
264.187 513.121 li
264.187 497.952 li
168.7 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 497.875 mo
264.187 497.875 li
264.187 482.706 li
168.7 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 497.875 mo
264.187 497.875 li
264.187 482.706 li
168.7 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 436.89 mo
264.187 436.89 li
264.187 421.721 li
168.7 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 436.89 mo
264.187 436.89 li
264.187 421.721 li
168.7 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 421.65 mo
264.187 421.65 li
264.187 406.481 li
168.7 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 421.65 mo
264.187 421.65 li
264.187 406.481 li
168.7 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 406.4 mo
264.187 406.4 li
264.187 391.231 li
168.7 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 406.4 mo
264.187 406.4 li
264.187 391.231 li
168.7 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
168.7 391.15 mo
264.187 391.15 li
264.187 375.981 li
168.7 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
168.7 391.15 mo
264.187 391.15 li
264.187 375.981 li
168.7 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory655 <001C60D8A8C9B5EE31030C529E541FFF4A4927D9C0BC047480904FC2F88BE5E10B57A78F1B02DE0510568E3FD00CE5225A245CA2D3883E4E41CEF8215983D216D684F21310A400D20CECBF406AB6FD430778988D1789CB69D95AFFA93775A96C19C0892A49BB12B04F73> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf177.29 385.46 mo(\002\310\002\217\006\314)sh/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf195.29 385.46 mo(\000\003)sh%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory1409 <001C60D8A8C9B5EE3100C7677FD28E24A587B4A47270806D124BB4B851AF9E2DFD290265DD3F5FCB83E4FEF7603262AA3E1F91716594804ADB6FC2DA77D23A> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf197.4 385.46 mo(\005\201\007[\012^)sh/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf215.4 385.46 mo(\000\003)sh/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf217.51 385.46 mo(\010\275\006?)[6 0 ]xsh/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf229.51 385.46 mo(\000\003)sh%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 3 GetGlyphDirectory2038 <001C60D8A8C9B5EE310364629A99619D3F0B87F516E224F24B6BC6DE2DE22B9089C3E0450E0F399C9A871D1B6247CA0CE08BCD6CA0CE3B5F594EA9068793CFA22A78862979623A69736A1BED4223F04E6F28FB68C145E5D3D94CAF7FCC2E0206A04A2EC9739D1FAAA4F9E3050482A609CC1FF8BFB4F8D4DE03E7D70F07E0D612CEC520846282E7CDC3744FF2A14410743AB0525ABE3DD6909B2ED917812A89AB17E6FEBDD4A0095D8DB2A38A88EDFB167376850A31942D528A7158ADDF> |1110 <001C60D8A8C9B5EE31030E725AC992F512AE3B4FB91999DB4E9016EDDA63A7092D2192949D59A64C4274C86545208CBF67B915F33F7D5B4F7CAC02130FC869DE624360A5DC0A6F4723ABE32BBE35AC263F06> |2717 <001C60D8A8C9B5EE3103492CFD7255BD2F4D72A9DCDC9919F94399A8AEBD3B9ADBC645D35E28EEFD97F3C963990BBDD0D662EFC1BF37004AB0DD4530> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf231.62 385.46 mo(\007\366\004V\010\207\012\235)sh264.19 452.14 mo
322.838 452.14 li
322.838 436.971 li
264.19 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 452.14 mo
322.838 452.14 li
322.838 436.971 li
264.19 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 467.38 mo
322.838 467.38 li
322.838 452.211 li
264.19 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 467.38 mo
322.838 467.38 li
322.838 452.211 li
264.19 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 482.63 mo
322.838 482.63 li
322.838 467.461 li
264.19 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 482.63 mo
322.838 482.63 li
322.838 467.461 li
264.19 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 543.613 mo
322.838 543.613 li
322.838 528.444 li
264.19 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 543.613 mo
322.838 543.613 li
322.838 528.444 li
264.19 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 528.367 mo
322.838 528.367 li
322.838 513.198 li
264.19 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 528.367 mo
322.838 528.367 li
322.838 513.198 li
264.19 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 513.121 mo
322.838 513.121 li
322.838 497.952 li
264.19 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 513.121 mo
322.838 513.121 li
322.838 497.952 li
264.19 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 497.875 mo
322.838 497.875 li
322.838 482.706 li
264.19 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 497.875 mo
322.838 497.875 li
322.838 482.706 li
264.19 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 436.89 mo
322.838 436.89 li
322.838 421.721 li
264.19 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 436.89 mo
322.838 436.89 li
322.838 421.721 li
264.19 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 421.65 mo
322.838 421.65 li
322.838 406.481 li
264.19 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 421.65 mo
322.838 421.65 li
322.838 406.481 li
264.19 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 406.4 mo
322.838 406.4 li
322.838 391.231 li
264.19 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 406.4 mo
322.838 406.4 li
322.838 391.231 li
264.19 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
264.19 391.15 mo
322.838 391.15 li
322.838 375.981 li
264.19 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
264.19 391.15 mo
322.838 391.15 li
322.838 375.981 li
264.19 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory2839 <001C60D8A8C9B5EE31031C738FCE079BFB5F6D513138634C33BF5B62721AA2E02F1FB48D4F8AB5D5190AB54C0ACA0945832606A174D3F8EEA9E3143FEE4FCE6C0CBC84627B6BA6DDFE4B17ADC4C63E93A09F635241744BF26938189B206A3087D38CC802F66B323500E2DA2DACA94438E98AF707FB666DBD263E24> |1849 <001C60D8A8C9B5EE31008D2214340D409CB1B25B098A05021F45B9C7CE3CC633E6A6D000930AC70DF8E8EB6253071CD9E8CCCD400309B932957A92531FC6C36D953918EDF4279AB648F69FBAB50FE527E7CC2A4998008D0C4A05527E3125E5A250902F5D8600274B> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf287.54 385.46 mo(\013\027\0079)[6 0 ]xsh322.88 452.14 mo
381.528 452.14 li
381.528 436.971 li
322.88 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 452.14 mo
381.528 452.14 li
381.528 436.971 li
322.88 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 467.38 mo
381.528 467.38 li
381.528 452.211 li
322.88 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 467.38 mo
381.528 467.38 li
381.528 452.211 li
322.88 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 482.63 mo
381.528 482.63 li
381.528 467.461 li
322.88 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 482.63 mo
381.528 482.63 li
381.528 467.461 li
322.88 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 543.613 mo
381.528 543.613 li
381.528 528.444 li
322.88 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 543.613 mo
381.528 543.613 li
381.528 528.444 li
322.88 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 528.367 mo
381.528 528.367 li
381.528 513.198 li
322.88 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 528.367 mo
381.528 528.367 li
381.528 513.198 li
322.88 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 513.121 mo
381.528 513.121 li
381.528 497.952 li
322.88 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 513.121 mo
381.528 513.121 li
381.528 497.952 li
322.88 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 497.875 mo
381.528 497.875 li
381.528 482.706 li
322.88 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 497.875 mo
381.528 497.875 li
381.528 482.706 li
322.88 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 436.89 mo
381.528 436.89 li
381.528 421.721 li
322.88 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 436.89 mo
381.528 436.89 li
381.528 421.721 li
322.88 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 421.65 mo
381.528 421.65 li
381.528 406.481 li
322.88 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 421.65 mo
381.528 421.65 li
381.528 406.481 li
322.88 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 406.4 mo
381.528 406.4 li
381.528 391.231 li
322.88 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 406.4 mo
381.528 406.4 li
381.528 391.231 li
322.88 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
322.88 391.15 mo
381.528 391.15 li
381.528 375.981 li
322.88 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
322.88 391.15 mo
381.528 391.15 li
381.528 375.981 li
322.88 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 4 GetGlyphDirectory2487 <001C60D8A8C9B5EE3100997F35B8C24F3C4DC1E6A4C9CB725F7334003987740A102797F86B7AECA08FF0F5FD0ABF6ED80EAAAA9EE23432D3EE51AD3749CF4983DA3DFEBAD1D38079C0A43D2C1D6F433CC445967F98E6A1F1B1647867B205C9AE92036D6A63C19F86509B3A36102E509C2A4296B285D62AAABBF41F436B486D6F39A5803DEFBDD5F64908D930783958CE717D74D22E0A92> |1327 <001C60D8A8C9B5EE310366CF081FF93C3C8C204935A8A6C0AE085B327644082FFC84B8D3758495B711F07C54086B50898F758714EA9EB357AC36AB5AFA1F8229EA14D17397CAFA8C7FF1D4AE2862C39E90A721EF344DB77F465978FAFBC327D42722FC694D4CA048F1C6DB05270B741447DD232236359AC6> |1851 <001C60D8A8C9B5EE31009BDCAC26B5BE34D15DE0409FC0EE72B828856E1D047478AE8A4CF99FE0F0C8A92FE34260C45E963EA9226C90265DA1E18759157AA88032A91EF855D21BC298456BC6FE0CD06843AA2D19320FA2754882096FCE1DC4F952943641889AAC4B5A07689FF0574E53A8B03A794BE14EA2181751> |1776 <001C60D8A8C9B5EE31031D690C9415F360AF7BCC6FF7051236FB08195409DDD6A526C238EC1E1B4A4F5EB27D9584BA20E49329286E76ADAD0BB714E4242D685E25B1B084F47B0D21382C435DCAAB207B709BED5DB58F98C653E5AA5BBDC66397E6E22F038ADE06567E5F0E> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf340.22 385.46 mo(\011\267\005/\007;\006\360)sh381.56 452.14 mo
479.621 452.14 li
479.621 436.971 li
381.56 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 452.14 mo
479.621 452.14 li
479.621 436.971 li
381.56 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 467.38 mo
479.621 467.38 li
479.621 452.211 li
381.56 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 467.38 mo
479.621 467.38 li
479.621 452.211 li
381.56 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 482.63 mo
479.621 482.63 li
479.621 467.461 li
381.56 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 482.63 mo
479.621 482.63 li
479.621 467.461 li
381.56 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 543.613 mo
479.621 543.613 li
479.621 528.444 li
381.56 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 543.613 mo
479.621 543.613 li
479.621 528.444 li
381.56 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 528.367 mo
479.621 528.367 li
479.621 513.198 li
381.56 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 528.367 mo
479.621 528.367 li
479.621 513.198 li
381.56 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 513.121 mo
479.621 513.121 li
479.621 497.952 li
381.56 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 513.121 mo
479.621 513.121 li
479.621 497.952 li
381.56 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 497.875 mo
479.621 497.875 li
479.621 482.706 li
381.56 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 497.875 mo
479.621 497.875 li
479.621 482.706 li
381.56 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 436.89 mo
479.621 436.89 li
479.621 421.721 li
381.56 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 436.89 mo
479.621 436.89 li
479.621 421.721 li
381.56 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 421.65 mo
479.621 421.65 li
479.621 406.481 li
381.56 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 421.65 mo
479.621 421.65 li
479.621 406.481 li
381.56 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 406.4 mo
479.621 406.4 li
479.621 391.231 li
381.56 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 406.4 mo
479.621 406.4 li
479.621 391.231 li
381.56 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
381.56 391.15 mo
479.621 391.15 li
479.621 375.981 li
381.56 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
381.56 391.15 mo
479.621 391.15 li
479.621 375.981 li
381.56 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf424.63 385.46 mo(\006x\002\310)[6 0 ]xsh476.79 452.14 mo
535.438 452.14 li
535.438 436.971 li
476.79 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 452.14 mo
535.438 452.14 li
535.438 436.971 li
476.79 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 467.38 mo
535.438 467.38 li
535.438 452.211 li
476.79 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 467.38 mo
535.438 467.38 li
535.438 452.211 li
476.79 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 482.63 mo
535.438 482.63 li
535.438 467.461 li
476.79 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 482.63 mo
535.438 482.63 li
535.438 467.461 li
476.79 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 543.613 mo
535.438 543.613 li
535.438 528.444 li
476.79 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 543.613 mo
535.438 543.613 li
535.438 528.444 li
476.79 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 528.367 mo
535.438 528.367 li
535.438 513.198 li
476.79 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 528.367 mo
535.438 528.367 li
535.438 513.198 li
476.79 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 513.121 mo
535.438 513.121 li
535.438 497.952 li
476.79 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 513.121 mo
535.438 513.121 li
535.438 497.952 li
476.79 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 497.875 mo
535.438 497.875 li
535.438 482.706 li
476.79 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 497.875 mo
535.438 497.875 li
535.438 482.706 li
476.79 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 436.89 mo
535.438 436.89 li
535.438 421.721 li
476.79 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 436.89 mo
535.438 436.89 li
535.438 421.721 li
476.79 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 421.65 mo
535.438 421.65 li
535.438 406.481 li
476.79 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 421.65 mo
535.438 421.65 li
535.438 406.481 li
476.79 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 406.4 mo
535.438 406.4 li
535.438 391.231 li
476.79 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 406.4 mo
535.438 406.4 li
535.438 391.231 li
476.79 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
476.79 391.15 mo
535.438 391.15 li
535.438 375.981 li
476.79 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
476.79 391.15 mo
535.438 391.15 li
535.438 375.981 li
476.79 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf494.16 385.46 mo(\006\314\010H\010j\005\324)sh27.496 452.14 mo
52.173 452.14 li
52.173 436.971 li
27.496 436.971 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 452.14 mo
52.173 452.14 li
52.173 436.971 li
27.496 436.971 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 446.45 mo(\000\027)sh27.496 467.38 mo
52.173 467.38 li
52.173 452.211 li
27.496 452.211 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 467.38 mo
52.173 467.38 li
52.173 452.211 li
27.496 452.211 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory24 <001C60D8A8C9B794D334EA7C6E5D8B4CC8014F2EE625F4A76A3B7C16E1076B92837E64DFBD3CC0E4DB75B30BBCAAAC57ECE51C1941780D0B76A6AD66C835B204E0727C28CA4A685AC041747D34277FB55D6E5D1D89779E3A4B114F275E265FDAD84BC059A36404130DE3717971B7838E47F70E45DB7F> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 461.71 mo(\000\030)sh27.496 482.63 mo
52.173 482.63 li
52.173 467.461 li
27.496 467.461 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 482.63 mo
52.173 482.63 li
52.173 467.461 li
27.496 467.461 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory25 <001C60D8A8C9B794D334B9F8887E24A2D1D5AA148E3AEED93EC1359DE00795E3D0495E8D683DB4EBBA7F31402B43A5595E9D65889CBFF11B7C2B81058554C48AAC3AB52D587DF0D038774A963B9B806481870F500088E06173C8876D73DECA8CCD48718DAD1C0A308D886E821F1175549C1243C0F7F097F67F34B0C96CD9D4161A588026C80A15BBD38E8B28D600ADB7E3A1322A4669171D3FAA194DE4B48E76B3115FD082F6CCC804946423> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 476.95 mo(\000\031)sh27.496 543.613 mo
52.173 543.613 li
52.173 528.444 li
27.496 528.444 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 543.613 mo
52.173 543.613 li
52.173 528.444 li
27.496 528.444 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory19 <001C60D8A8C9B794D33C8E3D4F3C815D165DDD1199F121215FAB12E9DF1AFB0E5F5E896576B6EC2B36E5EF413269C6F138A8DF43EDEDAA11508CFFC48FE8AD01671498C962123658C5871D5E48F8B972A09D97B647311EA667532081B9766F8F8D> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf36.528 537.936 mo(\000\024\000\023)[3.35997 0 ]xsh27.496 528.367 mo
52.173 528.367 li
52.173 513.198 li
27.496 513.198 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 528.367 mo
52.173 528.367 li
52.173 513.198 li
27.496 513.198 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory28 <001C60D8A8C9B794D32E9F79E244A30CB0115C89E9A783E7128A031D12B7D1AA3D4C7FB439ABFD10C835AFA0E723F6ED0576047EEF4032D2F09A4C874BE466A1088C9AB07FE0E2399CB93EB91F8555A19B7A030C7881B14F4C6CEFCD58CC32C405648EB986B1C2D14552C10FF815958BF32993445AAAA775E31723BFD67021CAD2504A6A7CF95E1825FD7566EAEEF4B212FC1F4C7F71F33B5C87323863F29D09ED3161629A3EDE466848511383EF> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 522.696 mo(\000\034)sh27.496 513.121 mo
52.173 513.121 li
52.173 497.952 li
27.496 497.952 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 513.121 mo
52.173 513.121 li
52.173 497.952 li
27.496 497.952 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory27 <001C60D8A8C9B794D33B80FEE54BB9BAABC58EE710E4AAF0F81F4EB58513E11F8D6A8E06AC489961657813824E9C352F25C0B2E4E219DFDB6D99B38A3CBEB2BE8BEAC2583309A1146276692FF98310FB4A39F9D4C98ACF3A4CA9DFB5C4E6419216A147B8241D79D8352EC39F8922372CCFF4CA5B2952D0D7C08EF554B6DE78B4A688BB6CB7F359EE422FC779DF2A82FE6A576CCBB932BB7F5EBE6916844730464052725F57AC44DBE5BA048179B3AAE0AE95A37AC1E35D19B6B4E600D56C72EB6E79E24198760B0C1D4733082996E7C895B53A0B7267BBC16F06C048CC90FB081C0BF537449DAC088CBD978F1245000D69E1A9EB9C34302EFF6C1D383C0D1491> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 507.456 mo(\000\033)sh27.496 497.875 mo
52.173 497.875 li
52.173 482.706 li
27.496 482.706 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 497.875 mo
52.173 497.875 li
52.173 482.706 li
27.496 482.706 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKR+MalgunGothic-KSCpc-EUC-H 1 GetGlyphDirectory26 <001C60D8A8C9B794D33455A60171B0042222C2860005781D09D7350383FAE4F5C0009AB08110725C5778E47BB38E8A78322F2F4735B1E8722A36FD401F0CB53F84> |!endend end
%ADOEndSubsetFont
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 492.19 mo(\000\032)sh27.496 436.89 mo
52.173 436.89 li
52.173 421.721 li
27.496 421.721 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 436.89 mo
52.173 436.89 li
52.173 421.721 li
27.496 421.721 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 431.21 mo(\000\026)sh27.496 421.65 mo
52.173 421.65 li
52.173 406.481 li
27.496 406.481 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 421.65 mo
52.173 421.65 li
52.173 406.481 li
27.496 406.481 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 415.94 mo(\000\025)sh27.496 406.4 mo
52.173 406.4 li
52.173 391.231 li
27.496 391.231 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 406.4 mo
52.173 406.4 li
52.173 391.231 li
27.496 391.231 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf38.184 400.7 mo(\000\024)sh27.496 391.15 mo
52.173 391.15 li
52.173 375.981 li
27.496 375.981 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
27.496 391.15 mo
52.173 391.15 li
52.173 375.981 li
27.496 375.981 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf35.736 385.46 mo(\0001\000R)[4.56 0 ]xsh27.102 375.17 mo
91.226 375.17 li
91.226 354.332 li
27.102 354.332 li
cp
1 /0 /CSD get_res sepcs
.502 sep
ef
27.102 375.17 mo
91.226 375.17 li
91.226 354.332 li
27.102 354.332 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf42.816 366.62 mo(\000\(\000'\000,\000\003\000'\000\(\000/\000\)\0002\0005)[3.10199 4.33197 1.56003 2.15403 4.30197 3.13199 2.87997 2.87996 4.67397 0 ]xsh92.667 375.17 mo
156.791 375.17 li
156.791 354.332 li
92.667 354.332 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
92.667 375.17 mo
156.791 375.17 li
156.791 354.332 li
92.667 354.332 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf110.54 366.62 mo(\000\(\000'\000,\000\003\000'\000\(\000/\000-\000,\0007)[3.10199 4.33197 1.56003 2.15403 4.30197 3.13199 2.87997 2.16 1.56003 0 ]xsh159.03 375.17 mo
223.154 375.17 li
223.154 354.332 li
159.03 354.332 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
159.03 375.17 mo
223.154 375.17 li
223.154 354.332 li
159.03 354.332 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf181.51 366.62 mo(\000\(\000'\000,\000\003\0003\0002)[3.10199 4.33197 1.56003 2.15402 3.36 0 ]xsh224.82 375.17 mo
288.944 375.17 li
288.944 354.332 li
224.82 354.332 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
224.82 375.17 mo
288.944 375.17 li
288.944 354.332 li
224.82 354.332 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf238.8 366.62 mo(\000\(\000'\000,\000\003\0000\000$\0001\0008\000$\000/)[3.10199 4.33197 1.56003 2.15402 5.51405 3.94803 4.59 4.18201 3.94803 0 ]xsh290.28 375 mo
354.404 375 li
354.404 354.162 li
290.28 354.162 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
290.28 375 mo
354.404 375 li
354.404 354.162 li
290.28 354.162 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf315.82 366.46 mo(\0007\000\(\000;\0007)[3.23398 3.10199 3.60599 0 ]xsh356.31 375 mo
420.434 375 li
420.434 354.162 li
356.31 354.162 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
356.31 375 mo
420.434 375 li
420.434 354.162 li
356.31 354.162 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf372.55 366.46 mo(\000\(\000'\000,\000\003\000$\000'\0009\000,\000&\000\()[3.10199 4.33197 1.56003 2.15402 3.94803 4.32599 3.72 1.67404 3.83395 0 ]xsh766.52 369.76 mo
813.499 369.76 li
813.499 354.169 li
766.52 354.169 li
cp
.865537 .506462 0 0 cmyk
ef
766.52 369.76 mo
813.499 369.76 li
813.499 354.169 li
766.52 354.169 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf774.02 363.84 mo(\012\263\010\212)[6 0 ]xsh/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf786.02 363.84 mo(\000\003)sh%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory1339 <001C60D8A8C9B5EE310D5802B15A3182076147B0CFE1196878818BF60F15EB191767344818B93222CC8206E8500C7A7A150697D3E6F7A3D7ADBD9BF51FE9D2A5BDFFF05B10> |1174 <001C60D8A8C9B5EE310356A987AE0BC1A0284C376A22C49945357B0FA25430291F2C5901C3077730C98D672AB0123A10FE> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf788.14 363.84 mo(\007\366\005;\004\226)sh717 369.76 mo
763.979 369.76 li
763.979 354.169 li
717 354.169 li
cp
.865537 .506462 0 0 cmyk
ef
717 369.76 mo
763.979 369.76 li
763.979 354.169 li
717 354.169 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 3 GetGlyphDirectory2668 <001C60D8A8C9B5EE31030C529BC3616FD34D629222A6529CD66E91D8FC56406FA1B0621F8C71F8C0745AC0624A3CF3326841BE09E508D31E49A46FDC25146CD8CF973D48B99D9A04389473ACA74578FFE5AB429C988A9F1046CDD39B60884AB668C49658C97BC3651EB3BEBB569709E191B9100351B5FCB26E83F6> |2832 <001C60D8A8C9B5EE31032DB8E5CFB0B19836C1638093A84169EB65EEEA9C90E80FBBD077820D6C3D475FD088889CEA1010310E2BD6DC98F1E4C41A2009638ABBB297E877C76103469C0D2833097CEDD790CCC22C0A45036D5FFCB2DA4C27E1EC5F536F41D4C328B93B7E1BCFD07D> |1407 <001C60D8A8C9B5EE31031C7C8B1A6D3303769F14A0CD39DCC5B921A0B36DEC3493F8628ECDF77C18BC798A5D26987AB45E2BEEA9E213204916A06F8AEC189FB795E3975A54916CB415D528095C95AE423B950D5BFF4D1F75261F194A36AAA1B9EE7AF750FA168EE9E868DEACF5EC67E9E5094B9C5B1097454491621902075171142642B68B0A6634CD1294A5E15FD1B4E14E8BD16AEA3AEEA9B4958530> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf718.49 363.84 mo(\012l\013\020\005\177)sh/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf736.49 363.84 mo(\000\003)sh%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory1068 <001C60D8A8C9B5EE3100C26F8A5F59B38BB5C02628F9766EAEACCD2B946CE07BCF66CA98973D9A98FCC5BDF18E39921D2196B6297C112FC5D7AF0457C065D12D9F55A68758013C39EDB0070E60DEBD> |2123 <001C60D8A8C9B5EE31039D68E881BD6F48E091392A46D9A33EFACDEF9774A646E313E1FC66A069B9B1D1C4EAB25CC593B77DE07F3923EACB94E204E4D1FEF888535E3DDF96D104C9BB81649385E7A05E678FDADFE3119E13ECB5164BEBBFD7BF036373130B0EF2518D4ACEB388CEEFB75E42B106BEF51F2EDD5CE3155E06BB014806E7A56FEAEF89CBDECF9508C12EA4CDD4C731FF2A63E84E0F80DA62E3BCD20A62C95759AEECEF09D37DE581D7EAD51B> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf738.6 363.84 mo(\004,\010K\005;\004\226)sh667.48 369.76 mo
714.459 369.76 li
714.459 354.169 li
667.48 354.169 li
cp
.865537 .506462 0 0 cmyk
ef
667.48 369.76 mo
714.459 369.76 li
714.459 354.169 li
667.48 354.169 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2023 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YVBAKS+MalgunGothic-KSCpc-EUC-H 2 GetGlyphDirectory2463 <001C60D8A8C9B5EE310323C90D855BE999B4444644FD0D1EBBD83E8FC1FE28EA04FE35EB0A228750B1BDB3ED3A532CAA0A4995BE7161A69F50732CEDF4B7AACFB9ADCA385640EEF4F1F8EB353E49E12948DBAF39E8B09B503DB09230AE826FD4F58484663F6CD155F3C644DAE060B421F51A5B0EAA129650D8> |2904 <001C60D8A8C9B5EE3100C26FBAEBA76A5EE327FDFF758793C342E053EE0BA8244E37B6B5BEFCE4B24848B488B5EC2903DC5998030BF1E446CA06CF10B3C0841A22C597059CBD7D30990B1D0909C045BE5362EA33CC2B3EDF65113E2EF2C89CE126EB3615CFA9408E34019B958ACAD8E7AF0EE067C28AEA1826696461557E989151A2F1821C19C3E41C016CB387E1B7C0298D82A3B4F57E5F49A223DCF489E8D56B951B3253EFB58A005A6C27E7088505A226A2882BCDF892293CFEB378210526E111B54A5744C8207472BAA95713EECAB60EF25CC75740CC2657> |!endend end
%ADOEndSubsetFont
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf682.03 363.84 mo(\011\237\003\033\013X)sh52.586 261.84 mo
111.234 261.84 li
111.234 246.671 li
52.586 246.671 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
52.586 261.84 mo
111.234 261.84 li
111.234 246.671 li
52.586 246.671 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
52.586 247.34 mo
111.234 247.34 li
111.234 232.171 li
52.586 232.171 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
52.586 247.34 mo
111.234 247.34 li
111.234 232.171 li
52.586 232.171 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
52.586 232.09 mo
111.234 232.09 li
111.234 216.921 li
52.586 216.921 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
52.586 232.09 mo
111.234 232.09 li
111.234 216.921 li
52.586 216.921 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
52.586 216.85 mo
111.234 216.85 li
111.234 201.681 li
52.586 201.681 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
52.586 216.85 mo
111.234 216.85 li
111.234 201.681 li
52.586 201.681 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
52.586 201.6 mo
111.234 201.6 li
111.234 186.431 li
52.586 186.431 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
52.586 201.6 mo
111.234 201.6 li
111.234 186.431 li
52.586 186.431 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf63.696 195.86 mo(\000&\000X\000V\000W\000R\000P\000H\000U\000\003\0001\000R)[3.83397 3.46802 2.53199 2.15401 3.48 5.28003 3.23402 2.15402 2.04003 4.674 0 ]xsh111.23 261.84 mo
169.878 261.84 li
169.878 246.671 li
111.23 246.671 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
111.23 261.84 mo
169.878 261.84 li
169.878 246.671 li
111.23 246.671 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
111.23 247.34 mo
169.878 247.34 li
169.878 232.171 li
111.23 232.171 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
111.23 247.34 mo
169.878 247.34 li
169.878 232.171 li
111.23 232.171 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
111.23 232.09 mo
169.878 232.09 li
169.878 216.921 li
111.23 216.921 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
111.23 232.09 mo
169.878 232.09 li
169.878 216.921 li
111.23 216.921 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
111.23 216.85 mo
169.878 216.85 li
169.878 201.681 li
111.23 201.681 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
111.23 216.85 mo
169.878 216.85 li
169.878 201.681 li
111.23 201.681 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
111.23 201.6 mo
169.878 201.6 li
169.878 186.431 li
111.23 186.431 li
cp
1 /0 /CSD get_res sepcs
.027 sep
ef
111.23 201.6 mo
169.878 201.6 li
169.878 186.431 li
111.23 186.431 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
1 /0 /CSD get_res sepcs
1 sep
/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H findfont [6 0 0 -6 0 0 ]msf118.34 195.86 mo(\000&\000X\000V\000W\000R\000P\000H\000U\000\003\0001\000D\000P\000H)[3.83397 3.46802 2.53198 2.15401 3.48 5.28003 3.23402 2.15402 2.04004 4.67398 3.12003 5.28003 0 ]xshgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/YVBAKS+MalgunGothic-KSCpc-EUC-H-Identity-H uf/YVBAKS+MalgunGothic-KSCpc-EUC-H /CIDFont ur/YVBAKR+MalgunGothic-KSCpc-EUC-H-Identity-H uf/YVBAKR+MalgunGothic-KSCpc-EUC-H /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
